import java.util.*;

class Solution {
    public int[] solution(int[] progresses, int[] speeds) {
      
        //모든 작업은 최소0 최대 100%를 달성하면 끝나므로 최대 100으로 배열 생성
        int[] work= new int[100];
        //작업을 배포하기 까지 걸릴 배포일 수 초기화
        int day = 0;
        
        //각 작업마다 검사하기 위한 for문과
        //100%에 도달하기 까지 며칠이 걸릴 지 검사하기 위한 while문
        /* 만약 [93, 30, 55] / [1, 30, 5]라면
           93%의 진행도의 1% 속도라면 day는 7이되고 인덱스7에 +1이 됨
           30%의 진행도의 30% 속도지만 day가 7이기때문에 인덱스7에 +1이 됨
           55%의 진행도의 5% 속도라면 day가 2번 더해져 day는 9가 되고 인덱스 9에 +1이 됨 */
        for(int i=0; i<progresses.length; i++) {
            while(progresses[i] + (speeds[i]*day) < 100) {
                day++;
            }
            work[day]++;
        }
        
        //결과 배열에 얼만큼 길이의 크기를 만들지에 대한 for문
        /* 즉, 7번 인덱스에 2와 9번 인덱스의 1에 총 2개의 인덱스에 값이 들어가있어 size는 2가됨 */
        int size = 0;
        for(int x : work) {
            if(x!=0) {
                size++;
            }
        }
        
        //결과를 반환하기 위한 배열
        int[] result = new int[size];
       /* 7번 인덱스를 만났을 때는 count는 0이기 때문에 result 배열 0번 인덱스에 work 배열 7번 인덱스의 값인 2가 들어감
          9번 인덱스를 만났을 때는 count는 1이기 때문에 result 배열 1번 인덱스에 work 배열 9번 인덱스의 값인 1이 들어감 */
        int count = 0;
        for(int x : work){
            if(x ! = 0) {
            result[count++] = x;
        }
    }
        return result;
    }
}
